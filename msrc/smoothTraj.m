function [x] = smoothTraj(t)
%SMOOTHTRAJ Summary of this function goes here
%   Detailed explanation goes here
x = polyTest(0,1,0,0,0.5,0,1,0.5,t);
end

function evaluation = polyTest(q_i, q_f, dq_i, dq_f, q_m, t_i, t_f, t_m, t)
evaluation = q_i + dq_i*(t - t_i) + ((t - t_i)^2*(3*q_f*t_m^4 - q_i*t_f^4 - q_f*t_i^4 + q_m*t_f^4 - 3*q_i*t_m^4 + q_m*t_i^4 + dq_f*t_f*t_i^4 + dq_i*t_f^4*t_i - dq_f*t_f*t_m^4 - 2*dq_i*t_f*t_m^4 - dq_i*t_f^4*t_m + dq_f*t_i*t_m^4 - dq_f*t_i^4*t_m + 2*dq_i*t_i*t_m^4 + 4*q_f*t_f*t_i^3 + 4*q_i*t_f^3*t_i - 4*q_f*t_f*t_m^3 - 8*q_f*t_i*t_m^3 + 4*q_i*t_f*t_m^3 - 4*q_m*t_f*t_i^3 - 4*q_m*t_f^3*t_i + 8*q_i*t_i*t_m^3 - dq_f*t_f^2*t_i^3 + 3*dq_i*t_f^2*t_i^3 - 4*dq_i*t_f^3*t_i^2 + dq_f*t_f^2*t_m^3 + 3*dq_i*t_f^2*t_m^3 - 3*dq_f*t_i^2*t_m^3 + 3*dq_f*t_i^3*t_m^2 - 5*dq_i*t_i^2*t_m^3 + 3*dq_i*t_i^3*t_m^2 - 6*q_i*t_f^2*t_i^2 + 6*q_f*t_i^2*t_m^2 + 6*q_m*t_f^2*t_i^2 - 6*q_i*t_i^2*t_m^2 + 2*dq_f*t_f*t_i*t_m^3 - 2*dq_f*t_f*t_i^3*t_m + 2*dq_i*t_f*t_i*t_m^3 - 6*dq_i*t_f*t_i^3*t_m + 4*dq_i*t_f^3*t_i*t_m + 12*q_f*t_f*t_i*t_m^2 - 12*q_f*t_f*t_i^2*t_m - 12*q_i*t_f*t_i*t_m^2 + 12*q_i*t_f*t_i^2*t_m - 3*dq_f*t_f^2*t_i*t_m^2 + 3*dq_f*t_f^2*t_i^2*t_m + 6*dq_i*t_f*t_i^2*t_m^2 - 9*dq_i*t_f^2*t_i*t_m^2 + 3*dq_i*t_f^2*t_i^2*t_m))/((t_f - t_i)^2*(t_f - t_m)^2*(t_i - t_m)^2) - ((t - t_i)^3*(2*q_f*t_m^4 - 2*q_i*t_f^4 - 2*q_f*t_i^4 + 2*q_m*t_f^4 - 2*q_i*t_m^4 + 2*q_m*t_i^4 + 2*dq_f*t_f*t_i^4 + 2*dq_i*t_f^4*t_i - dq_f*t_f*t_m^4 - dq_i*t_f*t_m^4 - 2*dq_i*t_f^4*t_m + dq_f*t_i*t_m^4 - 2*dq_f*t_i^4*t_m + dq_i*t_i*t_m^4 + 8*q_f*t_f*t_i^3 + 8*q_i*t_f^3*t_i - 8*q_f*t_i*t_m^3 - 8*q_m*t_f*t_i^3 - 8*q_m*t_f^3*t_i + 8*q_i*t_i*t_m^3 - 3*dq_f*t_f^2*t_i^3 + dq_f*t_f^3*t_i^2 + 3*dq_i*t_f^2*t_i^3 - 5*dq_i*t_f^3*t_i^2 + dq_f*t_f^3*t_m^2 + 3*dq_i*t_f^3*t_m^2 - 4*dq_f*t_i^2*t_m^3 + 5*dq_f*t_i^3*t_m^2 - 4*dq_i*t_i^2*t_m^3 + 3*dq_i*t_i^3*t_m^2 - 4*q_f*t_f^2*t_i^2 - 8*q_i*t_f^2*t_i^2 - 4*q_f*t_f^2*t_m^2 + 8*q_f*t_i^2*t_m^2 + 4*q_i*t_f^2*t_m^2 + 12*q_m*t_f^2*t_i^2 - 8*q_i*t_i^2*t_m^2 + 4*dq_f*t_f*t_i*t_m^3 - 2*dq_f*t_f*t_i^3*t_m - 2*dq_f*t_f^3*t_i*t_m + 4*dq_i*t_f*t_i*t_m^3 - 6*dq_i*t_f*t_i^3*t_m + 2*dq_i*t_f^3*t_i*t_m + 8*q_f*t_f*t_i*t_m^2 - 16*q_f*t_f*t_i^2*t_m + 8*q_f*t_f^2*t_i*t_m - 8*q_i*t_f*t_i*t_m^2 + 16*q_i*t_f*t_i^2*t_m - 8*q_i*t_f^2*t_i*t_m - 3*dq_f*t_f*t_i^2*t_m^2 - 3*dq_f*t_f^2*t_i*t_m^2 + 6*dq_f*t_f^2*t_i^2*t_m + 3*dq_i*t_f*t_i^2*t_m^2 - 9*dq_i*t_f^2*t_i*t_m^2 + 6*dq_i*t_f^2*t_i^2*t_m))/((t_f - t_i)^3*(t_f - t_m)^2*(t_i - t_m)^2) + ((t - t_i)^4*(q_f*t_i^3 - q_i*t_f^3 + 2*q_f*t_m^3 + q_m*t_f^3 - 2*q_i*t_m^3 - q_m*t_i^3 - dq_f*t_f*t_i^3 + dq_i*t_f^3*t_i - dq_f*t_f*t_m^3 - dq_i*t_f*t_m^3 - dq_i*t_f^3*t_m + dq_f*t_i*t_m^3 + dq_f*t_i^3*t_m + dq_i*t_i*t_m^3 - 3*q_f*t_f*t_i^2 + 3*q_i*t_f^2*t_i - 3*q_f*t_f*t_m^2 - 3*q_f*t_i*t_m^2 + 3*q_i*t_f*t_m^2 + 3*q_m*t_f*t_i^2 - 3*q_m*t_f^2*t_i + 3*q_i*t_i*t_m^2 + dq_f*t_f^2*t_i^2 - dq_i*t_f^2*t_i^2 + dq_f*t_f^2*t_m^2 + 2*dq_i*t_f^2*t_m^2 - 2*dq_f*t_i^2*t_m^2 - dq_i*t_i^2*t_m^2 + 6*q_f*t_f*t_i*t_m - 6*q_i*t_f*t_i*t_m + dq_f*t_f*t_i*t_m^2 + dq_f*t_f*t_i^2*t_m - 2*dq_f*t_f^2*t_i*t_m - dq_i*t_f*t_i*t_m^2 + 2*dq_i*t_f*t_i^2*t_m - dq_i*t_f^2*t_i*t_m))/((t_f - t_i)^3*(t_f - t_m)^2*(t_i - t_m)^2);
end

